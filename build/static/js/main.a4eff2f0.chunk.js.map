{"version":3,"sources":["core/Point.ts","core/Coordinate.ts","core/Enemy/EnemySet.ts","core/tool/index.ts","core/Hero/Hero.ts","core/Bullet/Bullet.ts","core/Bullet/BoomBullet.ts","core/Enemy/BoomHook.ts","core/Hero/BoomHero.ts","core/Hero/GrapeshotHero.ts","core/Bullet/SpecialLightningBullet.ts","core/Hero/LightningHero.ts","core/Bullet/SniperBullet.ts","core/Hero/SniperHero.ts","core/Enemy/Enemy.ts","core/Round/Round1.ts","core/tool/ExecuteMachine.ts","core/tool/doubleBuffer.ts","core/index.ts","App.tsx","reportWebVitals.ts","index.tsx","App.module.css"],"names":["Point","x","y","coordinate","this","origin","p","p1","toNumber","p2","Coordinate","EnemySet","array","notNullArray","matrix","set","Set","dirtySet","length","clear","enemy","isDirty","add","forEach","delete","index","findIndex","_enemy","filter","callbackfn","predicate","some","items","item","i","push","indexList","map","random","Math","floor","r","result","point","row","size","res","drawRoundRect","w","h","ctx","beginPath","moveTo","arcTo","closePath","stroke","drawLightning","color","lightColor","pn1x","pn1y","dx","dy","l","lengthTo","cos","sin","strokeStyle","shadowColor","shadowOffsetX","shadowOffsetY","j","lineWidth","o","plus","randomR","lineTo","shadowBlur","Hero","game","level","type","step","killNumber","startSpecialMove","position","fillStyle","fill","textAlign","fillText","_x","_y","Bullet","DefaultBullet","direction","hero","speed","ATK","isEnd","enemySet","findEnemyByPoint","hited","addKillNumber","height","width","round","gnt1","createLinearGradient","addColorStop","BoomBullet","life","isBoomed","findEnemysAroundEnemy","_color","arc","boundary","PI","BoomHook","pushBullet","BoomHero","target","damage","nullHero","intervalCount","enemys","isPickedByBoom","cycle","interval","value","addHook","ceil","percent","isPicked","hooks","hook","beforeDestory","renderTarget","ratio","targetC","startC","tan","endC","middleC","abs","setLineDash","GrapeshotHero","specialLength","bulletNumber","bullets","bulletColor","bulletSize","targetY","SpecialLightningBullet","findEnemyByY","stage","stageNumber","_lightColor","LightningHero","_targets","len","targetMaxLength","smallNum","getNotNull","SniperBullet","startPoint","targetPoint","harmdEnemy","has","SniperHero","specialTargets","specialDamage","specialDamageMax","maxEnemy","get","getRandomEnemy","radius","canvasList","Array","_","canvas","document","createElement","getContext","Enemy","go","cb","n","score","removeEnemy","render","drawImage","Round1","waveNumber","symbolLife","createEnemy","font","ExecuteMachine","defaultRemainingTime","remainingTime","blockStateList","executeStep","memoStep","isExecutingToTheEnd","isInTheEnv","starter","Error","endLogic","isExecuting","executingStartTime","getNow","performance","now","logic","resetState","callback","start","consumingTime","channel","MessageChannel","port","port2","DoubleBuffer","drawLogic","calcLogic","onEnd","renderFrame","headFrame","headNum","renderNum","isFirst","shouldGo","frameStartTime","calcStartTime","frameTime","exe","next","isReady","current","createCanvasList","port1","onmessage","msg","data","entry","calcHeadFrame","end","getNextFrame","reset","postMessage","requestAnimationFrame","drawFrame","block","stop","isMobile","test","window","navigator","userAgent","createStages","Game","offStageHeros","onStageHeros","preBullets","innerHeight","innerWidth","sizeRate","targetLineLeft","targetLineRight","offStageHeroY","onStageHeroY","heroPosList","setEnd","setRound","$","HP","renderHP","isRenderStrategy","isMouseDown","mouseSelectItem","mouseSelectItemType","mouseSelectItemIndex","mouseSelectItemPosition","mouseSelectItemOffset","heroPosCanvas","db","initHeroPosCanvas","clearRect","flushBullet","flushEnemy","handleMouseMove","bind","handleTouchMove","pos","startLoop","bullet","removeBullet","concat","addOffStageHero","isLoose","isWin","award","coreRender","loopRender","renderSymbol","fillRect","renderHpWidth","hpWidth","putImageData","getImageData","rect","displayScore","toFixed","undefined","addToOffStage","list","_hero","addOnStageHero","e","findHero","clientX","clientY","addEventListener","stopPropagation","preventDefault","touches","passive","heros","heroIndex","isTrue","isPointIn","removeEventListener","handleEventEnd","changedTouches","leftUp","rightDown","targetI","temp","handleMove","grapeshot","name","price","lightning","sniper","boom","createProduct","createProductList","App","canvasRef","useRef","useState","isShopOpen","setIsShopOpen","productList","setProductList","showShopError","setShowShopError","useEffect","handler","handleMouseUp","touchEndHandler","handleTouchEnd","ref","className","s","onClick","onTouchStart","handleTouchStart","onMouseDown","handleCanvasMouseDown","info","shopBtn","shopBox","style","fontSize","fontWeight","margin","marginBottom","right","bottom","display","justifyContent","refreshHeroList","shopList","shopItem","buySuccess","buyHero","newProductList","shopItemPrice","shopError","gameEndBox","join","restart","restartBtn","startFighting","tips","newLink","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a4eff2f0.chunk.js","sourcesContent":["import { Coordinate } from \"./Coordinate\";\n\nexport class Point {\n    x = 0;\n    y = 0;\n    coordinate: Coordinate;\n\n    constructor(x: number, y: number, coordinate: Coordinate) {\n        this.x = x;\n        this.y = y;\n        this.coordinate = coordinate;\n    }\n\n    toNumber(): [number, number] {\n        return [this.x + this.coordinate.origin[0], this.y + this.coordinate.origin[1]];\n    }\n\n    plus(x: number, y: number) {\n        return new Point(this.x + x, this.y + y, this.coordinate);\n    }\n\n    lengthTo(p: Point): number {\n        let p1 = this.toNumber();\n        let p2 = p.toNumber();\n\n        return ((p1[0] - p2[0])**2 + (p1[1] - p2[1])**2)**0.5;\n    }\n}\n","import { Point } from \"./Point\";\n\nexport class Coordinate {\n    origin: [number, number] = [0, 0];\n\n    constructor(x: number, y: number) {\n        this.origin = [x, y];\n    }\n\n    resetOrigin(origin: Point) {\n        this.origin = origin.toNumber();\n    }\n\n    point(x: number, y: number): Point {\n        return new Point(x, y, this);\n    }\n\n    toPoint(x: number, y: number): Point {\n        return new Point(x - this.origin[0], y - this.origin[1], this);\n    }\n}","import { Point } from \"../Point\";\nimport { Enemy } from \"./Enemy\";\n\nexport class EnemySet {\n    array: (Enemy|null)[] = [];\n    notNullArray: Enemy[] = [];\n    matrix: (Enemy|null)[][] = [];\n    set: Set<Enemy> = new Set();\n    dirtySet: Set<Enemy> = new Set();\n    length = 0;\n\n    reset() {\n        this.array = [];\n        this.matrix = [];\n        this.notNullArray = [];\n        this.set = new Set<Enemy>();\n        this.dirtySet.clear();\n        this.length = 0;\n    }\n\n    removeEnemy(enemy: Enemy) {\n        enemy.isDirty = true;\n        this.dirtySet.add(enemy);\n        this.length--;\n    }\n\n    flushEnemy() {\n        this.dirtySet.forEach(enemy => {\n            this.set.delete(enemy);\n            let index = this.array.findIndex(_enemy => _enemy === enemy);\n            this.array[index] = null;\n            this.matrix[enemy.y][enemy.x] = null;\n            this.notNullArray = this.notNullArray.filter(_enemy => _enemy !== enemy);\n        });\n        this.dirtySet.clear();\n    }\n\n    forEach(callbackfn: (value: Enemy, index: number, array: (Enemy)[]) => void) {\n        this.notNullArray.filter(enemy => !enemy.isDirty).forEach(callbackfn);\n    }\n\n    some(predicate: (value: Enemy | null, index: number, array: (Enemy | null)[]) => unknown): boolean {\n        return this.array.filter(enemy => !(enemy && enemy.isDirty)).some(predicate);\n    }\n\n    filter(predicate: ((value: Enemy | null, index: number, array: (Enemy | null)[]) => boolean)) {\n        return this.array.filter(enemy => !(enemy && enemy.isDirty)).filter(predicate);\n    }\n\n    push(...items: Enemy[]) {\n        this.length += items.length;\n        items.forEach((item, i) => {\n            item.x = i;\n            item.y = this.matrix.length;\n            this.set.add(item);\n        });\n        this.matrix.push(items);\n        this.notNullArray.push(...items);\n        return this.array.push(...items);\n    }\n\n    get(i: number): Enemy | null {\n        return this.array.filter(enemy => !(enemy && enemy.isDirty))[i];\n    }\n\n    getNotNull(i: number): Enemy {\n        return this.notNullArray.filter(enemy => !enemy.isDirty)[i];\n    }\n\n    getEnemysByIndex(indexList: number[]): Enemy[] {\n        return indexList.map(i => this.notNullArray.filter(enemy => !enemy.isDirty)[i]);\n    }\n\n    getRandomEnemy(): Enemy {\n        let random = Math.floor(Math.random() * this.length);\n        return this.notNullArray.filter(enemy => !enemy.isDirty)[random];\n    }\n\n    findEnemysAroundEnemy(enemy: Enemy, r: 1|2|3): Enemy[] {\n        let result = [];\n        switch (r) {\n            case 1:\n                result.push(this.matrix[enemy.y][enemy.x]);\n                result.push(this.matrix[enemy.y][enemy.x - 1]);\n                result.push(this.matrix[enemy.y][enemy.x + 1]);\n                result.push((this.matrix[enemy.y - 1] || [])[enemy.x]);\n                result.push((this.matrix[enemy.y + 1] || [])[enemy.x]);\n                break;\n            case 2:\n            case 3:\n            default:\n                result.push(this.matrix[enemy.y][enemy.x]);\n                result.push(this.matrix[enemy.y][enemy.x - 1]);\n                result.push(this.matrix[enemy.y][enemy.x + 1]);\n                result.push((this.matrix[enemy.y - 1] || [])[enemy.x]);\n                result.push((this.matrix[enemy.y + 1] || [])[enemy.x]);\n                \n                result.push(this.matrix[enemy.y][enemy.x - 2]);\n                result.push(this.matrix[enemy.y][enemy.x + 2]);\n\n                result.push((this.matrix[enemy.y - 2] || [])[enemy.x]);\n                result.push((this.matrix[enemy.y + 2] || [])[enemy.x]);\n\n                result.push((this.matrix[enemy.y - 1] || [])[enemy.x - 1]);\n                result.push((this.matrix[enemy.y + 1] || [])[enemy.x + 1]);\n                result.push((this.matrix[enemy.y - 1] || [])[enemy.x + 1]);\n                result.push((this.matrix[enemy.y + 1] || [])[enemy.x - 1]);\n\n                result.push((this.matrix[enemy.y - 2] || [])[enemy.x - 1]);\n                result.push((this.matrix[enemy.y - 2] || [])[enemy.x + 1]);\n                result.push((this.matrix[enemy.y + 2] || [])[enemy.x - 1]);\n                result.push((this.matrix[enemy.y + 2] || [])[enemy.x + 1]);\n\n                result.push((this.matrix[enemy.y - 1] || [])[enemy.x - 2]);\n                result.push((this.matrix[enemy.y - 1] || [])[enemy.x + 2]);\n                result.push((this.matrix[enemy.y + 1] || [])[enemy.x - 2]);\n                result.push((this.matrix[enemy.y + 1] || [])[enemy.x + 2]);\n                break;\n            }\n        return result.filter(enemy => enemy && !enemy.isDirty) as Enemy[];\n    }\n\n    findEnemyByPoint(point: Point): Enemy | null {\n        // 30 * i + 10 - 2\n        // 30 * i + 10 + enemySize (20) + 2\n        // Math.floor((point.x - 10) / 30)\n        if ((point.x - 8) % 30 > 24) return null;\n        let i = Math.floor((point.x - 10) / 30);\n        if (i < 0 || i > 14) return null;\n        let result: Enemy | null = null;\n        this.matrix.some(row => {\n            let enemy = row[i];\n            if (!enemy) return false;\n            if (enemy.point.y + enemy.size + 2 < point.y) {\n                return true;\n            } else if (enemy.point.y - 2 <= point.y) {\n                result = enemy;\n                return true;\n            }\n            return false;\n        });\n        if (result && (result as Enemy).isDirty) {\n            return null;\n        }\n        return result;\n    }\n\n    findEnemyByY(y: number): Enemy[] {\n        let result: Enemy[] = [];\n        this.matrix.some(row => {\n            let res = false;\n            row.some(enemy => {\n                if (!enemy || enemy.isDirty) return false;\n                if (enemy.point.y + enemy.size < y) {\n                    return true;\n                } else if (enemy.point.y <= y) {\n                    result.push(enemy);\n                    res = true;\n                    return false;\n                }\n                return true;\n            });\n            return res;\n        });\n        \n        return result;\n    }\n}\n","import { Point } from \"../Point\";\n\nexport const drawRoundRect = (x: number, y: number, w: number, h: number, r: number, ctx: CanvasRenderingContext2D): void => {\n    if (w < 2 * r) r = w / 2;\n    if (h < 2 * r) r = h / 2;\n    ctx.beginPath();\n    ctx.moveTo(x+r, y);\n    ctx.arcTo(x+w, y, x+w, y+h, r);\n    ctx.arcTo(x+w, y+h, x, y+h, r);\n    ctx.arcTo(x, y+h, x, y, r);\n    ctx.arcTo(x, y, x+w, y, r);\n    ctx.closePath();\n    ctx.stroke();\n}\n\nexport const drawLightning = (p1: Point, p2: Point, ctx: CanvasRenderingContext2D, color?: string, lightColor?: string) => {\n    const [pn1x, pn1y] = p1.toNumber();\n    const [pn2x, pn2y] = p2.toNumber();\n\n    const dx = pn2x - pn1x;\n    const dy = pn2y - pn1y;\n    const l = p1.lengthTo(p2);\n\n    const cos = dx / l;\n    const sin = dy / l;\n\n    ctx.strokeStyle = color || \"red\";\n\n    ctx.shadowColor = lightColor || 'blue';\n    // ctx.shadowBlur = 6;\n    ctx.shadowOffsetX = 0;\n    ctx.shadowOffsetY = 0;\n    let j = 4 + Math.floor(Math.random() * 5);\n\n    ctx.beginPath();\n    ctx.lineWidth = 1 + Math.floor(Math.random()*6);\n    ctx.moveTo(...p1.toNumber());\n    for (let i = 1; i < j; i++) {\n        let random = Math.random() - 0.5;\n        let o = p1.plus(dx / j * (i + random), dy / j * (i + random));\n\n        let randomR = (Math.random() - 0.5) * 40;\n        o = o.plus(randomR * sin, randomR * cos);\n\n        ctx.lineTo(...o.toNumber());\n    }\n    ctx.lineTo(...p2.toNumber());\n    ctx.stroke();\n    ctx.closePath();\n\n    ctx.shadowBlur = 0;\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = \"black\";\n}","import { Game } from \"..\";\nimport { Point } from \"../Point\";\nimport { drawRoundRect } from \"../tool\";\n\nexport class Hero {\n    point: Point;\n    level: 1|2|3 = 1;\n    get size() {\n        switch (this.level) {\n            case 1:\n                return 30;\n            case 2:\n                return 30;\n            default:\n            case 3:\n                return 30;\n        }\n    }\n    color = 'blue';\n    type = 'hero';\n\n    step = 0;\n\n    killNumber = 0;\n\n    game: Game;\n\n    constructor(game: Game) {\n        this.game = game;\n        this.point = new Point(0, 0, game.coordinate);\n    }\n\n    addKillNumber() {\n        this.killNumber++;\n        if (this.killNumber >= 100) {\n            this.killNumber = 0;\n            this.startSpecialMove();\n        }\n    }\n\n    startSpecialMove() {\n\n    }\n\n    go() {\n        this.step++;\n    }\n\n    render(ctx: CanvasRenderingContext2D, position?: [number, number]) {\n        let [x, y] = position || this.point.toNumber();\n        ctx.strokeStyle = this.color;\n        drawRoundRect(x, y, this.size, this.size, 5, ctx);\n        ctx.strokeStyle = 'black';\n        ctx.fillStyle = 'white';\n        ctx.fill();\n        ctx.fillStyle = this.color;\n        ctx.textAlign = 'center';\n        ctx.fillText(`${this.level}`, x + this.size / 2, y + 18);\n        ctx.fillStyle = 'green';\n        ctx.strokeStyle = 'green';\n        drawRoundRect(x + 1, y + this.size + 3, this.killNumber / 100 * (this.size - 2), 2, 1, ctx);\n        ctx.fill();\n        ctx.strokeStyle = 'black';\n        ctx.fillStyle = 'white';\n        ctx.fillStyle = 'black';\n    }\n\n    isPointIn(x: number, y: number) {\n        let [_x, _y] = this.point.toNumber();\n        return x >= _x - 10 && x <= _x + this.size + 10\n            && y >= _y - 10 && y <= _y + this.size + 10;\n    }\n\n    addToOffStage(position: 0|1|2|3|4|5|6|7|8) {\n    }\n}","import { Game } from \"..\";\nimport { Hero } from \"../Hero/Hero\";\nimport { Point } from \"../Point\";\n\nexport class Bullet {\n    isDirty = false;\n\n    go() {\n\n    }\n\n    render(ctx: CanvasRenderingContext2D) {\n\n    }\n}\n\nexport class DefaultBullet extends Bullet {\n    point: Point;\n    game: Game;\n    size = 2;\n    direction = 0;\n    speed = 30;\n    color = 'black';\n    ATK = 1;\n\n    isEnd = false;\n\n    hero: Hero;\n\n    constructor(point: Point, direction: number, game: Game, hero: Hero, {\n        speed, color, ATK, size\n    }: {\n        speed?: number;\n        color?: string;\n        ATK?: number;\n        size?: number;\n    }) {\n        super();\n        this.point = point;\n        this.direction = direction;\n        this.game = game;\n        this.hero = hero;\n        speed && (this.speed = speed);\n        color && (this.color = color);\n        ATK && (this.ATK = ATK);\n        size && (this.size = size);\n    }\n\n    go() {\n        if (this.isDirty) return;\n\n        for (let i = 0; i < this.speed * 5; i++) {\n            this.point.y -= Math.cos(this.direction);\n            this.point.x += Math.sin(this.direction);\n\n            let enemy = this.game.enemySet.findEnemyByPoint(this.point);\n            if (enemy && !enemy.isDirty) {\n                let isKilled = enemy.hited(this.ATK);\n                if (isKilled) {\n                    this.hero.addKillNumber();\n                }\n                this.isDirty = true;\n                this.isEnd = true;\n                return;\n            }\n        }\n        if (this.point.y < 0\n            || this.point.y > this.game.height\n            || this.point.x < 0\n            || this.point.x > this.game.width) {\n            // this.game.removeBullet(this);\n            this.isDirty = true;\n        }\n    }\n\n    render(ctx: CanvasRenderingContext2D) {\n        let [x, y] = this.point.toNumber();\n\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n        const dx = Math.round(Math.sin(this.direction) * this.speed);\n        const dy = Math.round(Math.cos(this.direction) * this.speed);\n        ctx.lineTo(x - dx, y + dy);\n        let gnt1 = ctx.createLinearGradient(x, y, x - dx, y + dy);\n        gnt1.addColorStop(0,this.color);\n        gnt1.addColorStop(1,'white');\n        ctx.lineWidth = this.size;\n        ctx.strokeStyle = gnt1;\n        ctx.stroke();\n        ctx.closePath();\n        ctx.strokeStyle = 'black';\n        ctx.lineWidth = 1;\n    }\n}\n","import { Game } from \"..\";\nimport { Enemy } from \"../Enemy/Enemy\";\nimport { BoomHero } from \"../Hero/BoomHero\";\nimport { Hero } from \"../Hero/Hero\";\nimport { Bullet } from \"./Bullet\";\n\nexport class BoomBullet extends Bullet {\n    enemy: Enemy;\n    game: Game;\n    hero: BoomHero;\n    life = 20;\n    isBoomed = false;\n    ATK = 0;\n    color: [number, number, number] | null = null;\n\n    get boundary() {\n        switch (this.hero.level) {\n            case 1:\n                return 28;\n            case 2:\n                return 38;\n            case 3:\n            default:\n                return 38;\n        }\n    }\n\n    constructor(ATK: number, enemy: Enemy, game: Game, hero: BoomHero, { color }: {\n        color?: [number, number, number];\n    }) {\n        super();\n        this.ATK = ATK;\n        this.enemy = enemy;\n        this.game = game;\n        this.hero = hero;\n        color && (this.color = color);\n    }\n\n    go() {\n        if (this.isDirty) return;\n        if (this.life <= 0) {\n            this.isDirty = true;\n        }\n        if (!this.isBoomed) {\n            let target = this.game.enemySet.findEnemysAroundEnemy(this.enemy, this.hero.level);\n            target.forEach(enemy => {\n                let isKilled = enemy.hited(this.ATK);\n                if (isKilled) {\n                    this.hero.addKillNumber();\n                }\n            });\n            this.isBoomed = true;\n        }\n        this.life--;\n    }\n\n    render(ctx: CanvasRenderingContext2D) {\n        let r = this.life**3 / 1600;\n        ctx.beginPath();\n        ctx.fillStyle = `rgba(${this.color || this.hero._color}, ${r/20})`;\n        ctx.arc(\n            ...this.enemy.point.toNumber(),\n            this.boundary - r, 0, 2*Math.PI);\n        ctx.fill();\n        ctx.closePath();\n        ctx.fillStyle = 'white';\n    }\n}","import { BoomBullet } from '../Bullet/BoomBullet';\nimport { Hero } from '../Hero/Hero';\nimport { Enemy, EnemyHook } from './Enemy';\nimport { BoomHero } from '../Hero/BoomHero';\n\nexport class BoomHook implements EnemyHook {\n    ATK = 0;\n    hero: BoomHero;\n\n    constructor(ATK: number, hero: BoomHero) {\n        this.ATK = ATK;\n        this.hero = hero;\n    }\n\n    beforeDestory(enemy: Enemy, color?: [number, number, number]) {\n        enemy.game.pushBullet(new BoomBullet(this.ATK, enemy, enemy.game, this.hero, {\n            color\n        }));\n    }\n    go() {\n\n    }\n    render(ctx: CanvasRenderingContext2D, enemy: Enemy) {\n        let point = enemy.point.plus(enemy.size - 2, 2).toNumber();\n        ctx.fillStyle = `rgb(${this.hero._color})`;\n        ctx.strokeStyle = `rgb(${this.hero._color})`;\n        ctx.beginPath();\n        ctx.moveTo(...point);\n        ctx.arc(...point, 4, 0, Math.PI*0.5);\n        ctx.fill();\n        ctx.moveTo(...point);\n        ctx.arc(...point, 4, Math.PI*1, Math.PI*1.5);\n        ctx.fill();\n        ctx.moveTo(...point);\n        ctx.arc(...point, 4, 0, Math.PI*2);\n        ctx.stroke();\n        ctx.closePath();\n        ctx.fillStyle = 'black';\n        ctx.strokeStyle = 'black';\n    }\n}\n","import { Enemy } from \"../Enemy/Enemy\";\nimport { drawRoundRect } from \"../tool\";\nimport { Hero } from \"./Hero\";\nimport { BoomHook } from '../Enemy/BoomHook';\n\nexport class BoomHero extends Hero {\n    type = 'boom-hero';\n    target: Enemy|null = null;\n    damage = 0;\n    color = 'red';\n    nullHero = new Hero(this.game);\n    speed = 1;\n    intervalCount = 1;\n    get interval() {\n        switch (this.level) {\n            case 1:\n                return 30;\n            case 2:\n                return 20;\n            default:\n            case 3:\n                return 15;\n        }\n    }\n\n    get cycle() {\n        switch (this.level) {\n            case 1:\n                return 3;\n            case 2:\n                return 2;\n            default:\n            case 3:\n                return 1;\n        }\n    }\n\n    get percent() {\n        switch (this.level) {\n            case 1:\n                return 30;\n            case 2:\n                return 50;\n            default:\n            case 3:\n                return 70;\n        }\n    }\n\n    get _color() {\n        switch (this.level) {\n            case 1:\n                return [153, 0, 0];\n            case 2:\n                return [0, 0, 153];\n            case 3:\n            default:\n                return [0, 0, 0];\n        }\n    }\n\n    go() {\n        if (!this.target) {\n            let enemys = this.game.enemySet.filter(enemy => !!(enemy && !enemy.isDirty && !enemy.isPickedByBoom));\n            if (enemys.length === 0) {\n                return super.go();\n            }\n            let randomK = Math.floor(Math.random() * enemys.length);\n            let enemy: Enemy = enemys[randomK] as Enemy;\n\n            this.target = enemy;\n            this.target.isPickedByBoom = true;\n        }\n        this.intervalCount++;\n        if (this.step % this.cycle !== 0 || this.intervalCount < this.interval) return super.go();\n\n        if (this.damage < this.target.value) {\n            this.damage += this.speed++;\n        } else {\n            this.target.addHook(new BoomHook(Math.ceil(this.damage * this.percent / 100), this));\n            this.damage = 0;\n            this.target.isPicked = false;\n            this.target = null;\n            this.speed = 1;\n            this.intervalCount = 1;\n        }\n\n        super.go();\n    }\n\n    startSpecialMove() {\n        this.game.enemySet.filter(enemy => {\n            return !!(enemy && !enemy.isDirty && enemy.isPickedByBoom);\n        }).forEach(enemy => {\n            enemy?.hooks.forEach(hook => {\n                if (hook instanceof BoomHook) {\n                    hook.beforeDestory(enemy, [0, 153, 153]);\n                }\n            });\n        });\n    }\n\n    render(ctx: CanvasRenderingContext2D, position?: [number, number]) {\n        super.render(ctx, position);\n        if (this.target) {\n            this.renderTarget(ctx, this.target, this.target.value - this.damage > 0 ? (this.target.value - this.damage) / this.target.value : 1);\n        }\n    }\n\n    renderTarget(ctx: CanvasRenderingContext2D, target: Enemy, ratio: number) {\n        if (target.value <= 0) return;\n        let targetC = target.point.plus(target.size / 2, target.size / 2).toNumber();\n        let startC = this.point.plus(this.size / 2, 0).toNumber();\n        let tan = (targetC[0] - startC[0]) / (targetC[1] - startC[1]);\n        let endC: [number, number] = [0, 0];\n        if (Math.abs(tan) > 1) {\n            endC = target.point.plus(target.size / 2, target.size / 2).plus(\n                targetC[0] > startC[0] ? -target.size / 2 : target.size / 2,\n                target.size / 2 / tan\n            ).toNumber();\n        } else {\n            endC = target.point.plus(target.size / 2, target.size / 2).plus(\n                target.size / 2 * tan,\n                targetC[1] > startC[1] ? -target.size / 2 : target.size / 2\n            ).toNumber();\n        }\n        let middleC: [number, number] = [\n            endC[0] + (startC[0] - endC[0]) * ratio,\n            endC[1] + (startC[1] - endC[1]) * ratio,\n        ];\n        ctx.strokeStyle = 'red';\n        ctx.lineWidth = 1;\n        ctx.setLineDash([4, 4]);\n        ctx.beginPath();\n        drawRoundRect(...target.point.plus(-2, -2).toNumber(), target.size + 4, target.size + 4, 6, ctx);\n        ctx.moveTo(...endC);\n        ctx.lineTo(...middleC);\n        ctx.stroke();\n        ctx.closePath();\n        ctx.beginPath();\n        ctx.setLineDash([]);\n        ctx.moveTo(...middleC);\n        ctx.lineTo(...startC);\n        ctx.stroke();\n\n        ctx.closePath();\n        ctx.strokeStyle = 'black';\n        ctx.lineWidth = 1;\n        ctx.setLineDash([]);\n    }\n}","import { DefaultBullet } from \"../Bullet/Bullet\";\nimport { Point } from \"../Point\";\nimport { Hero } from \"./Hero\";\n\nexport class GrapeshotHero extends Hero {\n    type = 'grapeshot-hero';\n    get cycle() {\n        switch (this.level) {\n            case 1:\n                return 5;\n            case 2:\n                return 3;\n            default:\n            case 3:\n                return 1;\n        }\n    }\n    get bulletNumber() {\n        switch (this.level) {\n            case 1:\n                return 5;\n            case 2:\n                return 6;\n            default:\n            case 3:\n                return 7;\n        }\n    }\n    get ATK() {\n        switch (this.level) {\n            case 1:\n                return 1;\n            case 2:\n                return 2;\n            default:\n            case 3:\n                return 3;\n        }\n    }\n    get bulletSize() {\n        switch (this.level) {\n            case 1:\n                return 1;\n            case 2:\n                return 2;\n            default:\n            case 3:\n                return 3;\n        }\n    }\n    get bulletColor() {\n        switch (this.level) {\n            case 1:\n                return 'black';\n            case 2:\n                return 'blue';\n            default:\n            case 3:\n                return 'red';\n        }\n    }\n    color = 'black';\n    specialLength = 0;\n\n    nullHero = new Hero(this.game);\n\n    go() {\n        if (this.step % this.cycle === 0 && this.game.enemySet.length > 0) {\n            for (let i = 0; i < this.bulletNumber; i++) {\n                this.game.bullets.push(\n                    new DefaultBullet(\n                        this.point.plus(this.size/2, 0),\n                        Math.PI*0.4*(Math.random() - 0.5),\n                        this.game,\n                        this,\n                        {\n                            speed: 30 + Math.floor(Math.random() * 30),\n                            color: this.bulletColor,\n                            ATK: this.ATK,\n                            size: this.bulletSize,\n                        }\n                    )\n                );\n            }\n        }\n        if (this.specialLength !== 0) {\n            if (this.specialLength % 3 === 0) {\n                for (let i = 0; i < 15; i++) {\n                    this.game.bullets.push(\n                        new DefaultBullet(\n                            new Point(30 * i + 10, this.game.targetY, this.game.coordinate),\n                            0,\n                            this.game,\n                            this.nullHero,\n                            {\n                                speed: 30 + Math.floor(Math.random() * 30),\n                                color: this.bulletColor,\n                                ATK: this.ATK,\n                                size: this.bulletSize,\n                            }\n                        )\n                    );\n                }\n            }\n            this.specialLength--;\n        }\n        this.step++;\n    }\n\n    startSpecialMove() {\n        this.specialLength = 200;\n    }\n}\n\n","import { Game } from \"..\";\nimport { LightningHero } from \"../Hero/LightningHero\";\nimport { Point } from \"../Point\";\nimport { drawLightning } from \"../tool\";\nimport { Bullet } from \"./Bullet\";\n\nexport class SpecialLightningBullet extends Bullet {\n    game: Game;\n    hero: LightningHero;\n    y = 0;\n    get speed() {\n        switch (this.hero.level) {\n            case 1:\n                return 5;\n            case 2:\n                return 3;\n            case 3:\n            default:\n                return 1;\n        }\n    }\n    get ATK() {\n        switch (this.hero.level) {\n            case 1:\n                return 1;\n            case 2:\n                return 2;\n            case 3:\n            default:\n                return 3;\n        }\n    }\n\n    constructor(game: Game, hero: LightningHero) {\n        super();\n        this.game = game;\n        this.hero = hero;\n        this.y = this.game.targetY;\n    }\n    go() {\n        if (this.isDirty) return;\n        this.y -= this.speed;\n        this.game.enemySet.findEnemyByY(this.y).forEach(enemy => {\n            if (enemy.isDirty) return;\n            enemy.hited(this.ATK);\n        });\n\n        if (this.y <= 0 || (this.game.stage[this.game.stageNumber].isEnd\n            && this.game.enemySet.length === 0)) {\n            this.isDirty = true;\n        }\n    }\n\n    render(ctx: CanvasRenderingContext2D) {\n        if (this.game.step % 5 !== 0) return;\n        drawLightning(\n            new Point(0, this.y, this.game.coordinate),\n            new Point(this.game.width, this.y, this.game.coordinate),\n            ctx,\n            this.hero._color,\n            this.hero._lightColor);\n    }\n}","import { SpecialLightningBullet } from '../Bullet/SpecialLightningBullet';\nimport { Enemy } from '../Enemy/Enemy';\nimport { drawLightning } from '../tool';\nimport { Hero } from './Hero';\n\ninterface Chain<T> {\n    value: T;\n    next: Chain<T> | null;\n}\n\nexport class LightningHero extends Hero {\n    type = 'lightning-hero';\n\n    // targets: {\n    //     length: number;\n    //     chain: Chain<Enemy> | null;\n    //     end: Chain<Enemy> | null;\n    // } = {\n    //     length: 0,\n    //     chain: null,\n    //     end: null\n    // };\n    _targets: Set<Enemy> = new Set();\n    get cycle() {\n        switch (this.level) {\n            case 1:\n                return 3;\n            case 2:\n                return 2;\n            default:\n            case 3:\n                return 1;\n        }\n    }\n    get _color() {\n        switch (this.level) {\n            case 1:\n                return 'rgb(255, 153, 153)';\n            case 2:\n                return 'rgb(153, 153, 255)';\n            default:\n            case 3:\n                return 'black';\n        }\n    }\n    get _lightColor() {\n        switch (this.level) {\n            case 1:\n                return 'blue';\n            case 2:\n                return 'red';\n            default:\n            case 3:\n                return 'red';\n        }\n    }\n    get targetMaxLength() {\n        switch (this.level) {\n            case 1:\n                return 2;\n            case 2:\n                return 3;\n            default:\n            case 3:\n                return 5;\n        }\n    }\n    get ATK() {\n        switch (this.level) {\n            case 1:\n                return 1;\n            case 2:\n                return 2;\n            default:\n            case 3:\n                return 2;\n        }\n    }\n\n    go() {\n        let len = this.game.enemySet.length;\n        if (this._targets.size < this.targetMaxLength && this.game.enemySet.length > this._targets.size) {\n            let smallNum = len >= this.targetMaxLength ? this.targetMaxLength : len;\n            let set = new Set<Enemy>();\n            while (set.size < smallNum) {\n                let enemy = this.game.enemySet.getNotNull(Math.floor(Math.random()*len));\n                if (enemy.isDirty) continue;\n                set.add(enemy);\n            }\n            this._targets = set;\n        }\n        // if (this.targets.length < this.targetMaxLength && this.game.enemySet.length > this.targets.length) {\n        //     let smallNum = this.game.enemySet.length >= this.targetMaxLength ? this.targetMaxLength : this.game.enemySet.length;\n        //     let i = smallNum - this.targets.length;\n        //     while (i > 0) {\n        //         let chain = this.targets.chain;\n\n        //         if (!chain) {\n        //             this.addTarget({\n        //                 value: this.game.enemySet.getRandomEnemy(),\n        //                 next: null\n        //             });\n        //             i--;\n        //             continue;\n        //         }\n\n        //         const isTrue = this.addTarget({\n        //             value: this.game.enemySet.getRandomEnemy(),\n        //             next: null\n        //         });\n        //         if (isTrue) {\n        //             i--;\n        //         }\n        //     }\n        //     this.targets.length = smallNum;\n        // }\n\n        if (this.step % this.cycle === 0) {\n            this._targets.forEach(enemy => {\n                let isKilled = enemy.hited(this.ATK);\n                if (isKilled) {\n                    this.addKillNumber();\n                    this._targets.delete(enemy);\n                }\n            });\n        }\n\n        // if (this.step % this.cycle === 0) {\n        //     let chain = this.targets.chain;\n        //     while (chain) {\n        //         if (chain.value.value > 0) {\n        //             let isKilled = chain.value.hited(this.ATK);\n        //             if (isKilled) {\n        //                 this.addKillNumber();\n        //             }\n        //         }\n        //         chain = chain.next;\n        //     }\n        //     chain = this.targets.chain;\n        //     if (!chain) return;\n        //     if (chain.value.value <= 0) {\n        //         this.targets.length = 0;\n        //         this.targets.chain = null;\n        //         this.targets.end = null;\n        //     } else {\n        //         let parent = chain;\n        //         chain = chain.next;\n        //         let length = 1;\n\n        //         while (chain) {\n        //             if (chain.value.value <= 0) {\n        //                 parent.next = null;\n        //                 this.targets.length = length;\n        //                 this.targets.end = parent;\n        //                 break;\n        //             } else {\n        //                 parent = chain;\n        //                 chain = chain.next;\n        //                 length++;\n        //             }\n        //         }\n        //     }\n        // }\n\n        this.step++;\n    }\n\n    render(ctx: CanvasRenderingContext2D, position?: [number, number]) {\n        super.render(ctx, position);\n        if (this.step % 5 !== 0) return;\n\n        if (this._targets.size <= 0 || this.game.enemySet.length === 0) return;\n        // if (!this.targets.chain) return;\n        // let chain: Chain<Enemy> | null = this.targets.chain;\n        let p1 = this.point.plus(this.size / 2, 0);\n\n        this._targets.forEach(enemy => {\n            let p2 = enemy.point.plus(enemy.size / 2, enemy.size / 2);\n            drawLightning(p1, p2, ctx, this._color, this._lightColor);\n\n            p1 = enemy.point.plus(enemy.size / 2, enemy.size / 2);\n        });\n\n        // while (chain) {\n        //     let p2 = chain.value.point.plus(chain.value.size / 2, chain.value.size / 2);\n        //     drawLightning(p1, p2, ctx, this._color, this._lightColor);\n\n        //     p1 = chain.value.point.plus(chain.value.size / 2, chain.value.size / 2);\n        //     chain = chain.next;\n        // }\n    }\n\n    startSpecialMove() {\n        this.game.bullets.push(new SpecialLightningBullet(this.game, this));\n    }\n\n    // addTarget(chain: Chain<Enemy>): boolean {\n    //     if (this.targets.end === null) {\n    //         this.targets.chain = chain;\n    //         this.targets.end = chain;\n    //         this.targets.length++;\n    //     } else {\n    //         let _chain = this.targets.chain;\n\n    //         while (_chain) {\n\n    //             if (chain.value === _chain.value) {\n    //                 return false;\n    //             }\n    //             _chain = _chain.next;\n    //         }\n    //         this.targets.end.next = chain;\n    //         this.targets.end = this.targets.end.next;\n    //         this.targets.length++;\n    //     }\n\n    //     return true;\n    // }\n\n    addToOffStage(position: 0|1|2|3|4|5|6|7|8) {\n        super.addToOffStage(position);\n        this._targets.clear();\n        // this.targets = {\n        //     length: 0,\n        //     chain: null,\n        //     end: null\n        // }\n    }\n}","import { Game } from \"..\";\nimport { Enemy } from \"../Enemy/Enemy\";\nimport { Hero } from \"../Hero/Hero\";\nimport { Point } from \"../Point\";\nimport { Bullet } from \"./Bullet\";\n\nexport class SniperBullet extends Bullet {\n    point: Point;\n    startPoint: Point;\n    targetPoint: Point;\n    game: Game;\n    hero: Hero;\n    damage = 0;\n    harmdEnemy = new Set<Enemy>();\n\n    sin = 0;\n    cos = 0;\n\n    speed = 30;\n    color = 'black';\n    size = 3;\n\n    constructor(game: Game, hero: Hero, p1: Point, p2: Point, {\n        speed, color, damage\n    }: {\n        speed?: number;\n        color?: string;\n        damage: number;\n    }) {\n        super();\n\n        this.game = game;\n        this.hero = hero;\n        this.startPoint = p1;\n        this.point = p1.plus(0, 0);\n        this.targetPoint = p2;\n        speed && (this.speed = speed);\n        color && (this.color = color);\n        this.damage = damage;\n        let dy = this.targetPoint.y - this.startPoint.y;\n        let dx = this.targetPoint.x - this.startPoint.x;\n        let len = (dy**2 + dx**2)**0.5;\n        this.sin = dx / len;\n        this.cos = -dy / len;\n    }\n\n    go() {\n        if (this.isDirty) return;\n        for (let i = 0; i < this.speed * 5; i++) {\n            this.point.y += -this.cos;\n            this.point.x += this.sin;\n\n            let enemy = this.game.enemySet.findEnemyByPoint(this.point);\n            if (enemy && !enemy.isDirty && !this.harmdEnemy.has(enemy)) {\n                this.harmdEnemy.add(enemy);\n                let isKilled = enemy.hited(this.damage);\n                if (isKilled) {\n                    this.hero.addKillNumber();\n                }\n            }\n        }\n        if (this.point.y < 0\n            || this.point.y > this.game.height\n            || this.point.x < 0\n            || this.point.x > this.game.width) {\n            this.isDirty = true;\n        }\n    }\n\n    render(ctx: CanvasRenderingContext2D) {\n        let [x, y] = this.point.toNumber();\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n        ctx.lineTo(x - this.sin * 150, y + this.cos * 150);\n        let gnt1 = ctx.createLinearGradient(x, y, x - this.sin * 150, y + this.cos * 150);\n        gnt1.addColorStop(0,this.color);\n        gnt1.addColorStop(1,'white');\n        ctx.strokeStyle = gnt1;\n        ctx.lineWidth = this.size;\n        ctx.stroke();\n        ctx.closePath();\n        ctx.strokeStyle = 'black';\n        ctx.lineWidth = 1;\n    }\n}","import { SniperBullet } from \"../Bullet/SniperBullet\";\nimport { Enemy } from \"../Enemy/Enemy\";\nimport { Hero } from \"./Hero\";\n\nexport class SniperHero extends Hero {\n    type = 'sniper-hero';\n    target: Enemy|null = null;\n    damage = 0;\n    color = 'green';\n    nullHero = new Hero(this.game);\n\n    specialTargets: Enemy[] = [];\n    specialDamage = -1;\n    specialDamageMax = 30;\n\n    get cycle() {\n        switch (this.level) {\n            case 1:\n                return 5;\n            case 2:\n                return 3;\n            default:\n            case 3:\n                return 2;\n        }\n    }\n\n    get percent() {\n        switch (this.level) {\n            case 1:\n                return 100;\n            case 2:\n                return 110;\n            default:\n            case 3:\n                return 120;\n        }\n    }\n\n    go() {\n        if (!this.target) {\n            let maxEnemy: Enemy | null = this.game.enemySet.get(0);\n            this.game.enemySet.forEach(enemy => {\n                if (enemy.isDirty) return;\n                if (!maxEnemy || (!enemy.isPicked && enemy.value > maxEnemy.value)) {\n                    maxEnemy = enemy;\n                }\n            });\n\n            if (!maxEnemy) {\n                return super.go();\n            }\n\n            this.target = maxEnemy;\n            this.target.isPicked = true;\n        }\n        if (this.step % this.cycle !== 0) return super.go();\n\n        if (this.damage < this.target.value) {\n            this.damage += 1;\n        } else {\n            this.game.bullets.push(new SniperBullet(\n                this.game,\n                this,\n                this.point.plus(this.size / 2, 0),\n                this.target.point.plus(this.target.size / 2, this.target.size / 2),\n                {\n                    damage: Math.ceil(this.damage * this.percent / 100),\n                }\n            ));\n            this.damage = 0;\n            this.target.isPicked = false;\n            this.target = null;\n        }\n\n        if (this.specialDamage > 0) {\n            this.specialDamage++;\n            this.specialTargets = this.specialTargets.filter(target => {\n                return target.value > 0;\n            });\n\n            if (this.specialDamage >= this.specialDamageMax) {\n                this.specialTargets.forEach(target => {\n                    this.game.bullets.push(new SniperBullet(\n                        this.game,\n                        this.nullHero,\n                        this.point.plus(this.size / 2, 0),\n                        target.point.plus(target.size / 2, target.size / 2),\n                        {\n                            damage: this.specialDamage,\n                        }\n                    ));\n                });\n                this.specialDamage = -1;\n                this.specialTargets = [];\n            }\n        }\n\n        super.go();\n    }\n\n    startSpecialMove() {\n        let set = new Set<Enemy>();\n        let length = this.game.enemySet.length;\n        while (set.size < (length < 12 ? length : 12)) {\n            set.add(this.game.enemySet.getRandomEnemy());\n        }\n\n        set.forEach(enemy => {\n            this.specialTargets.push(enemy);\n        });\n\n        this.specialDamage = 1;\n    }\n\n    render(ctx: CanvasRenderingContext2D, position?: [number, number]) {\n        super.render(ctx, position);\n        if (this.target) {\n            this.renderTarget(ctx, this.target, 5 + (this.target.value - this.damage > 0 ? this.target.value - this.damage : 0));\n        }\n        this.specialTargets.forEach(target => {\n            this.renderTarget(ctx, target, 5 + this.specialDamageMax - this.specialDamage);\n        });\n    }\n\n    renderTarget(ctx: CanvasRenderingContext2D, target: Enemy, radius: number) {\n        if (target.value <= 0) return;\n        ctx.strokeStyle = 'red';\n        ctx.lineWidth = 2;\n        ctx.beginPath();\n        ctx.arc(\n            ...target.point.plus(target.size / 2, target.size / 2).toNumber(),\n            radius, 0, 2*Math.PI);\n        ctx.moveTo(...target.point.plus(target.size / 2, target.size / 2 + radius + 5).toNumber());\n        ctx.lineTo(...target.point.plus(target.size / 2, target.size / 2 + radius - 5).toNumber());\n        ctx.moveTo(...target.point.plus(target.size / 2, target.size / 2 - radius + 5).toNumber());\n        ctx.lineTo(...target.point.plus(target.size / 2, target.size / 2 - radius - 5).toNumber());\n        ctx.moveTo(...target.point.plus(target.size / 2 + radius + 5, target.size / 2).toNumber());\n        ctx.lineTo(...target.point.plus(target.size / 2 + radius - 5, target.size / 2).toNumber());\n        ctx.moveTo(...target.point.plus(target.size / 2 - radius + 5, target.size / 2).toNumber());\n        ctx.lineTo(...target.point.plus(target.size / 2 - radius - 5, target.size / 2).toNumber());\n        ctx.stroke();\n        ctx.closePath();\n        ctx.strokeStyle = 'black';\n        ctx.lineWidth = 1;\n    }\n}","import { Game } from \"..\";\nimport { Point } from \"../Point\";\nimport { drawRoundRect } from \"../tool\";\n\nexport interface EnemyHook  {\n    go: () => void;\n    render(ctx: CanvasRenderingContext2D, enemy: Enemy): void;\n    beforeDestory: (enemy: Enemy) => void;\n}\n\nlet canvasList = new Array(500);\ncanvasList = canvasList.map((_, i) => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 20;\n    canvas.height = 20;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return null;\n    ctx.beginPath();\n    drawRoundRect(0, 0, 20, 20, 5, ctx);\n    ctx.textAlign = 'center';\n    ctx.fillText(`${i}`, 10, 13);\n    ctx.closePath();\n    return canvas;\n});\n\nexport class Enemy {\n    value = 0;\n    size = 20;\n    point: Point;\n    game: Game;\n    beforeDestory: ((enemy: Enemy) => void)[] = [];\n    hooks: EnemyHook[] = [];\n    speed = 0.5;\n    isDirty = false;\n\n    x = 0;\n    y = 0;\n\n    isPicked = false;\n    isPickedByBoom = false;\n\n    constructor(value: number, x: number, game: Game, speed?: number) {\n        this.value = value;\n        this.game = game;\n        this.point = new Point(x, -this.size, game.coordinate);\n        speed && (this.speed = speed);\n    }\n\n    go() {\n        this.point.y += this.speed;\n        this.hooks.forEach(hook => hook.go());\n    }\n\n    addBeforeDestory(cb: (enemy: Enemy) => void) {\n        this.beforeDestory.push(cb);\n    }\n\n    addHook(hook: EnemyHook) {\n        this.hooks.push(hook);\n    }\n\n    hited(n?: number): boolean {\n        if (n) {\n            this.game.score += this.value < n ? this.value : n;\n            this.value -= n;\n        } else {\n            this.value--;\n            this.game.score++;\n        }\n\n        if (this.value <= 0) {\n            this.beforeDestory.forEach(cb => cb(this));\n            this.game.removeEnemy(this);\n            this.hooks.forEach(hook => hook.beforeDestory(this));\n            return true;\n        }\n        return false;\n    }\n\n    render(ctx: CanvasRenderingContext2D) {\n        this.hooks.forEach(hook => hook.render(ctx, this));\n        let [x, y] = this.point.toNumber();\n        if (canvasList[this.value]) {\n            ctx.drawImage(canvasList[this.value], x, y);\n        } else {\n            drawRoundRect(x, y, this.size, this.size, 5, ctx);\n            ctx.textAlign = 'center';\n            ctx.fillText(`${this.value}`, x + this.size / 2, y + 13);\n        }\n    }\n\n}\n","import { Game } from \"..\";\nimport { Enemy } from \"../Enemy/Enemy\";\nimport { Round } from \"./Round\";\n\nexport class Round1 implements Round {\n    game: Game;\n    waveNumber = 30;\n\n    symbolLife = 100;\n    speed = 0.5;\n    get cycle() {\n        return 30 / this.speed;\n    }\n\n    isEnd = false;\n\n    constructor(game: Game, speed: number) {\n        this.game = game;\n        this.speed = speed;\n    }\n\n    createEnemy() {\n        let row: Enemy[] = [];\n        for (let i = 0; i < 15; i++) {\n            row.push(new Enemy(Math.ceil(this.game.step/110*Math.random() + 1), 30 * i + 10, this.game, this.speed));\n        }\n        this.game.enemySet.push(...row);\n    }\n\n    go() {\n        if (this.waveNumber === 0) {\n            this.isEnd = true;\n            return;\n        }\n        if (this.game.step % this.cycle === 0) {\n            this.createEnemy();\n            this.waveNumber--;\n        }\n    }\n\n    award() {\n\n    }\n\n    renderSymbol(ctx: CanvasRenderingContext2D) {\n        ctx.beginPath();\n        ctx.font = 'italic bolder 60px Arial';\n        ctx.fillStyle = 'grey';\n        ctx.textAlign = 'center';\n        ctx.fillText(`ROUND ${this.game.stageNumber + 1}`, this.game.width / 2, this.game.height - 350);\n        ctx.font = '12px Arial';\n        ctx.fillStyle = 'black';\n        ctx.closePath();\n    }\n}\n","interface blockState {\n    result: any;\n    consumingTime: number;\n}\n\nexport class ExecuteMachine {\n    private remainingTime;\n    private defaultRemainingTime;\n    private blockStateList: (blockState|null)[] = [];\n    private executeStep = 0;\n    private memoStep = 0;\n    private isExecutingToTheEnd = true;\n    private isInTheEnv = false;\n    private starter: () => void = () => {\n        throw new Error(\"need a starter.\");\n    };\n    private endLogic: () => void = () => {};\n    private isExecuting = false;\n    private executingStartTime = this.getNow();\n\n    constructor(defaultRemainingTime: number = 16) {\n        this.defaultRemainingTime = defaultRemainingTime;\n        this.remainingTime = defaultRemainingTime;\n    }\n\n    private resetState() {\n        this.executeStep = 0;\n        this.memoStep = 0;\n        this.blockStateList = [];\n        this.isExecutingToTheEnd = true;\n        this.isExecuting = false;\n    }\n\n    getNow(): number {\n        return performance.now();\n    }\n\n    entry(logic: () => void): void {\n        this.starter = () => {\n            this.isExecutingToTheEnd = true;\n            logic();\n            this.executeStep = 0;\n            if (this.isExecutingToTheEnd) {\n                this.memoStep = 0;\n                this.blockStateList.fill(null);\n                this.endLogic();\n            }\n        };\n        this.resetState();\n    }\n\n    end(endLogic: () => void) {\n        this.endLogic = endLogic;\n    }\n\n    start(remainingTime?: number) {\n        if (this.isExecuting) return;\n        this.isInTheEnv = true;\n        this.remainingTime = remainingTime || this.defaultRemainingTime;\n        this.executingStartTime = this.getNow();\n        this.isExecuting = true;\n        while (this.isExecuting) {\n            this.starter();\n        }\n        if (this.isExecutingToTheEnd) {\n            this.blockStateList.fill(null);\n        }\n        this.isInTheEnv = false;\n    }\n\n    block<T>(callback: () => T): T {\n        if (!this.isInTheEnv) {\n            return callback();\n        }\n        if (this.getNow() - this.executingStartTime >= this.remainingTime) {\n            this.isExecuting = false;\n        }\n        if (!this.isExecuting) {\n            this.isExecutingToTheEnd = false;\n            return null as unknown as T;\n        }\n        let result: T;\n        if (this.executeStep < this.memoStep) {\n            result = (this.blockStateList[this.executeStep] as blockState).result;\n        } else {\n            const start = this.getNow();\n            result = callback();\n            const end = this.getNow();\n            const consumingTime = end - start;\n            this.blockStateList[this.executeStep] = {\n                result,\n                consumingTime,\n            };\n            this.memoStep++;\n        }\n\n        this.executeStep++;\n        \n        return result;\n    }\n\n    stop() {\n        this.isExecuting = false;\n    }\n}\n","import { ExecuteMachine } from \"./ExecuteMachine\";\n\ninterface canvasI {\n    value: HTMLCanvasElement;\n    next: canvasI|null;\n    isReady: boolean;\n}\n\nconst createCanvasList = (len: number, width: number, height: number): canvasI => {\n    let start: canvasI = {\n        value: document.createElement('canvas'),\n        next: null,\n        isReady: false,\n    }\n    start.value.width = width;\n    start.value.height = height;\n    let current = start;\n    for (let i = 0; i < len - 1; i++) {\n        current.next = {\n            value: document.createElement('canvas'),\n            isReady: false,\n            next: null\n        }\n        current.next.value.width = width;\n        current.next.value.height = height;\n        current = current.next;\n    }\n    current.next = start;\n\n    return start;\n}\n\nconst channel = new MessageChannel();\nconst port = channel.port2;\n\nexport class DoubleBuffer {\n    renderFrame: canvasI;\n    headFrame: canvasI;\n    headNum = 0;\n    renderNum = 0;\n    drawLogic: (doubleBuffer: DoubleBuffer) => void;\n    calcLogic: (doubleBuffer: DoubleBuffer) => boolean;\n    onEnd: () => void;\n\n    isEnd = false;\n    isFirst = true;\n\n    shouldGo = false;\n\n    frameStartTime = performance.now();\n    calcStartTime = 0;\n    frameTime = 14;\n\n    exe = new ExecuteMachine();\n\n    constructor({ width, height }: {\n        width: number;\n        height: number;\n    },\n    drawLogic: (doubleBuffer: DoubleBuffer) => void,\n    calcLogic: (doubleBuffer: DoubleBuffer) => boolean,\n    endLogic: () => void,\n    onEnd: () => void) {\n        this.drawLogic = drawLogic;\n        this.calcLogic = calcLogic;\n        this.onEnd = onEnd;\n\n        this.renderFrame = createCanvasList(400, width, height);\n        this.headFrame = this.renderFrame;\n\n        channel.port1.onmessage = (msg) => {\n            if (!this.shouldGo || this.isEnd || msg.data.isEnd || (this.headFrame === this.renderFrame && !this.isFirst)) {\n                return;\n            }\n            this.calcStartTime = performance.now();\n            this.exe.start(this.frameTime - (this.calcStartTime - msg.data.frameStartTime));\n        }\n\n        this.exe.entry(() => {\n            this.calcHeadFrame();\n        });\n\n        this.exe.end(() => {\n            endLogic();\n        });\n    }\n\n    startLoop() {\n        this.shouldGo = true;\n        this.exe.start(300);\n    }\n\n    private reset() {\n        this.isEnd = false;\n        this.isFirst = true;\n        this.renderFrame = this.headFrame;\n        this.renderNum = this.headNum;\n    }\n\n    private getNextFrame(): boolean {\n        if (this.renderFrame.next !== this.headFrame) {\n            this.renderFrame = this.renderFrame.next as canvasI;\n            this.renderNum++;\n        } else if (this.isEnd) {\n            return true;\n        }\n        return false;\n    }\n\n    private drawFrame() {\n        this.frameStartTime = performance.now();\n        const isEnd = this.getNextFrame();\n        this.drawLogic(this);\n\n        if (isEnd) {\n            this.shouldGo = false;\n            this.reset();\n            this.onEnd();\n            return;\n        }\n        port.postMessage({ frameStartTime: this.frameStartTime, isEnd });\n        requestAnimationFrame(() => {\n            this.drawFrame();\n        });\n    }\n\n    private calcHeadFrame() {\n        const isEnd = this.calcLogic(this);\n        this.exe.block(() => {\n            if (isEnd) {\n                this.isEnd = true;\n                this.exe.stop();\n            }\n            this.headFrame.isReady = true;\n            this.headFrame = this.headFrame.next as canvasI;\n            this.headFrame.isReady = false;\n            this.headNum++;\n            if (this.headFrame === this.renderFrame) {\n                this.exe.stop();\n            }\n            if (this.isFirst) {\n                this.isFirst = false;\n                requestAnimationFrame(() => {\n                    this.drawFrame();\n                });\n            }\n        });\n    }\n}\n","import { Bullet } from \"./Bullet/Bullet\";\nimport { Coordinate } from \"./Coordinate\";\nimport { Enemy } from \"./Enemy/Enemy\";\nimport { EnemySet } from \"./Enemy/EnemySet\";\nimport { BoomHero } from \"./Hero/BoomHero\";\nimport { GrapeshotHero } from \"./Hero/GrapeshotHero\";\nimport { Hero } from \"./Hero/Hero\";\nimport { LightningHero } from \"./Hero/LightningHero\";\nimport { SniperHero } from \"./Hero/SniperHero\";\nimport { Point } from \"./Point\";\nimport { Round1 } from \"./Round/Round1\";\nimport { drawRoundRect } from \"./tool\";\nimport { DoubleBuffer } from \"./tool/doubleBuffer\";\n\nconst isMobile = /Android|webOS|iPhone|iPod|BlackBerry/i.test(window.navigator.userAgent);\nconst createStages = (game: Game) => {\n    return [\n        // 1\n        new Round1(game, 1),\n        new Round1(game, 1),\n        new Round1(game, 1),\n        new Round1(game, 1),\n        // 5\n        new Round1(game, 1),\n        new Round1(game, 1),\n        new Round1(game, 1),\n        new Round1(game, 1.5),\n        new Round1(game, 1.5),\n        // 10\n        new Round1(game, 1.5),\n        new Round1(game, 1.5),\n        new Round1(game, 1.5),\n        new Round1(game, 1.5),\n        new Round1(game, 2),\n        // // 15\n        new Round1(game, 2),\n        new Round1(game, 2),\n        new Round1(game, 2),\n        // new Round1(game),\n        // new Round1(game),\n        // // 20\n        // new Round1(game),\n        // new Round1(game),\n        // new Round1(game),\n        // new Round1(game),\n        // new Round1(game),\n        // // 25\n        // new Round1(game),\n        // new Round1(game),\n        // new Round1(game),\n        // new Round1(game),\n        // new Round1(game),\n        // // 30\n        // new Round1(game),\n        // new Round1(game),\n        // new Round1(game),\n        // new Round1(game),\n        // new Round1(game),\n        // // 35\n        // new Round1(game),\n        // new Round1(game),\n        // new Round1(game),\n        // new Round1(game),\n        // new Round1(game),\n        // // 40\n        // new Round1(game),\n        // new Round1(game),\n        // new Round1(game),\n        // new Round1(game),\n        // new Round1(game),\n        // // 45\n        // new Round1(game),\n        // new Round1(game),\n        // new Round1(game),\n        // new Round1(game),\n        // new Round1(game),\n        // // 50\n        // new Round1(game)\n    ];\n}\n\nexport class Game {\n    coordinate = new Coordinate(0, 0);\n\n    // enemys: Enemy[] = [];\n    enemySet = new EnemySet();\n\n    offStageHeros: [\n        Hero|null, Hero|null, Hero|null,\n        Hero|null, Hero|null, Hero|null,\n        Hero|null, Hero|null, Hero|null\n    ] = [null, null, null, null, null, null, null, null, null];\n    onStageHeros: [\n        Hero|null, Hero|null, Hero|null,\n        Hero|null, Hero|null, Hero|null,\n        Hero|null, Hero|null, Hero|null\n    ] = [null, null, null, null, null, null, null, null, null];\n\n    bullets: Bullet[] = [];\n    preBullets: Bullet[] = [];\n\n    width = 460;\n    height = window.innerHeight * 460 / window.innerWidth;\n    sizeRate = 460 / window.innerWidth;\n\n    targetY = this.height - 150;\n    targetLineLeft = this.coordinate.point(0, this.targetY);\n    targetLineRight = this.coordinate.point(this.width, this.targetY);\n\n    offStageHeroY = this.height - 70;\n    onStageHeroY = this.height - 120;\n    // 数组顺序不要动\n    heroPosList = [\n        new Point(55, this.offStageHeroY, this.coordinate),\n        new Point(95, this.offStageHeroY, this.coordinate),\n        new Point(135, this.offStageHeroY, this.coordinate),\n        new Point(175, this.offStageHeroY, this.coordinate),\n        new Point(215, this.offStageHeroY, this.coordinate),\n        new Point(255, this.offStageHeroY, this.coordinate),\n        new Point(295, this.offStageHeroY, this.coordinate),\n        new Point(335, this.offStageHeroY, this.coordinate),\n        new Point(375, this.offStageHeroY, this.coordinate),\n\n        new Point(55, this.onStageHeroY, this.coordinate),\n        new Point(95, this.onStageHeroY, this.coordinate),\n        new Point(135, this.onStageHeroY, this.coordinate),\n        new Point(175, this.onStageHeroY, this.coordinate),\n        new Point(215, this.onStageHeroY, this.coordinate),\n        new Point(255, this.onStageHeroY, this.coordinate),\n        new Point(295, this.onStageHeroY, this.coordinate),\n        new Point(335, this.onStageHeroY, this.coordinate),\n        new Point(375, this.onStageHeroY, this.coordinate)\n    ];\n\n    step = 0;\n    setEnd: React.Dispatch<React.SetStateAction<boolean>> | null = null;\n    setRound: React.Dispatch<React.SetStateAction<'strategy' | 'fighting'>> | null = null;\n\n    $ = 400;\n    score = 0;\n\n    HP = 1000;\n    renderHP = 1000;\n    result: 'win' | 'loose' | 'initial' = 'initial';\n    round: 'strategy' | 'fighting' = 'strategy';\n    stageNumber = 0;\n    stage = createStages(this);\n\n    isRenderStrategy = false;\n\n    isMouseDown = false;\n    mouseSelectItem: Hero | null = null;\n    mouseSelectItemType: 'off' | 'on' = 'off';\n    mouseSelectItemIndex: 0|1|2|3|4|5|6|7|8 = 0;\n    mouseSelectItemPosition: [number, number] = [0, 0];\n    mouseSelectItemOffset: [number, number] = [0, 0];\n\n    canvas: HTMLCanvasElement | null = null;\n\n    heroPosCanvas: HTMLCanvasElement;\n    db: DoubleBuffer;\n\n    constructor() {\n        this.heroPosCanvas = document.createElement('canvas');\n        this.initHeroPosCanvas();\n\n        this.db = new DoubleBuffer({\n            width: this.width, height: this.height\n        },\n        db => {\n            if (!this.canvas) return;\n            const ctx = this.canvas.getContext('2d');\n            if (ctx) {\n                ctx.clearRect(0, 0, this.width, this.height);\n                ctx.drawImage(db.renderFrame.value, 0, 0);\n            }\n        },\n        db => this.calcLogic(db),\n        () => {\n            this.flushBullet();\n            this.enemySet.flushEnemy();\n        },\n        () => {\n            this.setRound && this.setRound('strategy');\n            if (this.result !== 'initial' && this.setEnd) {\n                this.setEnd(true);\n            }\n        });\n\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n        this.handleTouchMove = this.handleTouchMove.bind(this);\n    }\n\n    private initHeroPosCanvas() {\n        this.heroPosCanvas.width = this.width;\n        this.heroPosCanvas.height = 120;\n        const ctx = this.heroPosCanvas.getContext('2d');\n        if (ctx) {\n            ctx.beginPath();\n            ctx.strokeStyle = 'grey';\n            this.heroPosList.forEach(pos => {\n                drawRoundRect(...pos.plus(8, 128 - this.height).toNumber(), 14, 14, 5, ctx);\n            });\n            ctx.strokeStyle = 'black';\n            ctx.closePath();\n        }\n    }\n\n    startFighting() {\n        this.round = 'fighting';\n        this.setRound && this.setRound('fighting');\n        this.db.startLoop();\n    }\n\n    restart() {\n        this.enemySet.reset();\n        this.offStageHeros = [null, null, null, null, null, null, null, null, null];\n        this.onStageHeros = [null, null, null, null, null, null, null, null, null];\n        this.bullets = [];\n        this.step = 0;\n        this.$ = 400;\n        this.score = 0;\n        this.HP = 1000;\n\n        this.stageNumber = 0;\n        this.round = 'strategy';\n        this.stage = createStages(this);\n        this.render();\n    }\n\n    removeBullet() {\n        this.bullets = this.bullets.filter(bullet => !bullet.isDirty);\n    }\n\n    pushBullet(bullet: Bullet) {\n        this.preBullets.push(bullet);\n    }\n\n    flushBullet() {\n        this.removeBullet();\n        this.bullets = this.bullets.concat(this.preBullets);\n        this.preBullets = [];\n    }\n\n    removeEnemy(enemy: Enemy) {\n        this.enemySet.removeEnemy(enemy);\n        this.$++;\n    }\n\n    refreshHeroList(): boolean {\n        if (this.$ < 10) return false;\n        this.$ -= 10;\n        this.render();\n        return true;\n    }\n\n    buyHero(type: 'lightning' | 'grapeshot' | 'sniper' | 'boom'): boolean {\n        switch (type) {\n            case 'lightning':\n                if (this.$ < 200) return false;\n                this.$ -= 200;\n                this.addOffStageHero(new LightningHero(this));\n                break;\n            case 'sniper':\n                if (this.$ < 150) return false;\n                this.$ -= 150;\n                this.addOffStageHero(new SniperHero(this));\n                break;\n            case 'boom':\n                if (this.$ < 120) return false;\n                this.$ -= 120;\n                this.addOffStageHero(new BoomHero(this));\n                break;\n            case 'grapeshot':\n            default:\n                if (this.$ < 220) return false;\n                this.$ -= 220;\n                this.addOffStageHero(new GrapeshotHero(this));\n                break;\n        }\n        this.render();\n        return true;\n    }\n\n    go(): boolean {\n        this.db.exe.block(() => {\n            this.stage[this.stageNumber].go();\n    \n            this.enemySet.forEach(enemy => {\n                if (enemy.isDirty) return;\n                enemy.go();\n                if (enemy.point.y >= this.targetY - enemy.size) {\n                    this.removeEnemy(enemy);\n                    this.HP -= enemy.value > this.HP ? this.HP : enemy.value;\n                }\n            });\n        });\n        this.db.exe.block(() => {\n            this.onStageHeros.forEach(hero => {\n                hero?.go();\n            });\n        });\n\n        this.bullets.forEach(bullet => {\n            this.db.exe.block(() => bullet.go());\n        });\n\n        return this.db.exe.block(() => {\n    \n            if (this.renderHP > this.HP) {\n                this.renderHP--;\n            } else if (this.renderHP < this.HP) {\n                this.renderHP++\n            }\n    \n            let isLoose = this.HP <= 0;\n    \n            if (isLoose) {\n                this.result = 'loose';\n            }\n    \n            let isWin = this.stage[this.stageNumber].isEnd\n                            && this.bullets.length === 0\n                            && this.enemySet.length === 0\n                            && this.renderHP === this.HP;\n    \n            if (isWin) {\n                this.round = 'strategy';\n                this.stageNumber++;\n                if (this.stageNumber === this.stage.length) {\n                    this.result = 'win';\n                } else {\n                    this.stage[this.stageNumber].award();\n                }\n            }\n    \n            this.step++;\n            return isLoose || isWin;\n        });\n    }\n\n    calcLogic(db: DoubleBuffer): boolean {\n        let isEnd = this.go();\n        this.coreRender(db.headFrame.value);\n        return isEnd;\n    }\n\n    goStrategy() {\n        if (this.isRenderStrategy) return;\n        this.loopRender();\n    }\n\n    loopRender() {\n        this.render();\n\n        if (!this.isRenderStrategy) {\n            return;\n        }\n        requestAnimationFrame(() => {\n            this.loopRender();\n        });\n    }\n\n    coreRender(canvas: HTMLCanvasElement) {\n        const ctx = this.db.exe.block(() => canvas.getContext('2d'));\n\n        this.db.exe.block(() => {\n            if (!ctx) return;\n    \n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n            this.stage[this.stageNumber]?.renderSymbol(ctx);\n    \n            ctx.drawImage(this.heroPosCanvas, 0, this.height - 120);\n    \n        });\n        this.enemySet.forEach(enemy => {\n            this.db.exe.block(() => {\n                if (!ctx || enemy.isDirty) return;\n                enemy.render(ctx);\n            });\n        });\n\n        this.db.exe.block(() => {\n            if (!ctx) return;\n\n            // HP条\n            ctx.beginPath();\n            ctx.fillStyle = 'white';        \n            ctx.fillRect(1, this.targetY - 30, this.width - 2, 32);\n            ctx.fillStyle = 'grey';\n            ctx.fillRect(1, this.targetY - 25, this.width - 2, 11);\n            ctx.fillStyle = 'lightgreen';\n            ctx.strokeStyle = 'green';\n            const renderHpWidth = this.renderHP / 1000 * (this.width - 2);\n            ctx.fillRect(this.width - renderHpWidth - 1, this.targetY - 25, renderHpWidth, 11);\n            ctx.fillStyle = '#00CC33';\n            const hpWidth = this.HP / 1000 * (this.width - 2);\n            ctx.fillRect(this.width - hpWidth - 1, this.targetY - 25, hpWidth, 11);\n            ctx.fillStyle = 'white';\n            ctx.fillText(`${this.HP}/1000`, this.width /2, this.targetY - 15);\n            ctx.closePath();\n            ctx.fillStyle = 'black';\n            ctx.strokeStyle = 'black';\n        });\n\n        this.db.exe.block(() => {\n            if (!ctx) return;\n\n            // 性能监测\n            ctx.beginPath();\n            ctx.fillRect(10, 200, (this.db.headNum - this.db.renderNum) * 1, 10);\n            \n            // this.db.exe.blockStateList.forEach((item, i) => {\n            //     ctx.fillRect(10, 220 + i * 10, (item?.consumingTime || 0) * 50, 5);\n            //     ctx.fillText(`${i}`, 5, 220 + i * 10 + 7);\n            // });\n            ctx.closePath();\n        });\n\n        this.db.exe.block(() => {\n            if (!ctx) return;\n\n            ctx.beginPath();\n            this.offStageHeros.forEach(hero => {\n                hero?.render(ctx);\n            });\n    \n            this.onStageHeros.forEach(hero => {\n                hero?.render(ctx);\n            });\n            ctx.closePath();\n    \n            ctx.beginPath();\n            ctx.moveTo(...this.targetLineLeft.plus(0, -30).toNumber());\n            ctx.lineTo(...this.targetLineRight.plus(0, -30).toNumber());\n            ctx.stroke();\n            ctx.closePath();\n        });\n        \n        \n        this.bullets.forEach(bullet => {\n            this.db.exe.block(() => {\n                if (!ctx) return;\n                ctx.beginPath();\n                bullet.render(ctx);\n                ctx.closePath();\n            });\n        });\n        \n        this.db.exe.block(() => {\n            if (!ctx) return;\n    \n            if (this.mouseSelectItem) {\n                this.mouseSelectItem.render(ctx, [\n                    this.mouseSelectItemPosition[0] + this.mouseSelectItemOffset[0],\n                    this.mouseSelectItemPosition[1] + this.mouseSelectItemOffset[1],\n                ]);\n                if (isMobile) {\n                    ctx.putImageData(ctx.getImageData(\n                        0, this.targetY, this.width, 150\n                    ), 0, this.targetY - 150);\n    \n                    ctx.rect(0, this.targetY - 150, this.width, 150);\n                    ctx.stroke();\n                }\n            }\n    \n            ctx.beginPath();\n            ctx.font = 'bold 20px Arial';\n            ctx.fillStyle = 'red';\n            ctx.textAlign = 'right';\n            ctx.fillText(`$:${this.$}`, 440, 29);\n            ctx.closePath();\n    \n            let displayScore = `${this.score}`;\n            if (this.score > 1000) {\n                displayScore = (this.score / 1000).toFixed(2) + 'k';\n            }\n            ctx.beginPath();\n            ctx.font = 'bold 18px Arial';\n            ctx.fillStyle = 'red';\n            ctx.textAlign = 'left';\n            ctx.fillText(`SCORE:${displayScore}`, 20, 29);\n            ctx.font = '12px Arial';\n            ctx.fillStyle = 'black';\n            ctx.closePath();\n    \n            ctx.beginPath();\n            ctx.font = '14px Arial';\n            ctx.fillStyle = 'black';\n            ctx.textAlign = 'center';\n            ctx.fillText(`round ${this.stageNumber + 1 > this.stage.length\n                ? this.stage.length : this.stageNumber + 1} / ${this.stage.length}`, this.width / 2, 28);\n            ctx.font = '12px Arial';\n            ctx.fillStyle = 'black';\n            ctx.closePath();\n        });\n\n    }\n\n    render() {\n        if (!this.canvas) return;\n        this.coreRender(this.canvas);\n    }\n\n    // setResult(isWin: 'win' | 'loose') {\n    //     this.result = isWin;\n    //     this.setEnd && this.setEnd(true);\n    // }\n\n    addOffStageHero(hero: Hero | null, position?: 0|1|2|3|4|5|6|7|8) {\n        if (position === undefined) {\n            this.offStageHeros.some((hero, index) => {\n                if (hero === null) {\n                    position = index as 0|1|2|3|4|5|6|7|8;\n                    return true;\n                }\n                return false;\n            });\n        }\n        if (position === undefined) return;\n        this.offStageHeros[position] = hero;\n        if (hero) {\n            hero.point.y = this.offStageHeroY;\n            hero.point.x = 55 + position * 40;\n            hero.addToOffStage(position);\n\n            if (hero.level >= 3) return;\n\n            let list: (0|1|2|3|4|5|6|7|8)[] = [];\n            this.offStageHeros.forEach((_hero, i) => {\n                if (_hero?.type === hero.type && hero.level === _hero.level) {\n                    list.push(i as 0);\n                }\n            });\n\n            if (list.length >= 3) {\n                this.addOffStageHero(null, list[0]);\n                this.addOffStageHero(null, list[1]);\n                (this.offStageHeros[list[2]] as Hero).level += 1;\n                this.addOffStageHero(this.offStageHeros[list[2]], list[2]);\n            }\n        }\n    }\n\n    addOnStageHero(hero: Hero | null, position?: 0|1|2|3|4|5|6|7|8) {\n        if (position === undefined) {\n            this.onStageHeros.some((hero, index) => {\n                if (hero === null) {\n                    position = index as 0|1|2|3|4|5|6|7|8;\n                    return true;\n                }\n                return false;\n            });\n        }\n        if (position === undefined) return;\n        this.onStageHeros[position] = hero;\n        if (hero) {\n            hero.point.y = this.onStageHeroY;\n            hero.point.x = 55 + position * 40;\n\n            if (hero.level >= 3) return;\n\n            let list: (0|1|2|3|4|5|6|7|8)[] = [];\n            this.onStageHeros.forEach((_hero, i) => {\n                if (_hero?.type === hero.type && hero.level === _hero.level) {\n                    list.push(i as 0);\n                }\n            });\n\n            if (list.length >= 3) {\n                this.addOnStageHero(null, list[0]);\n                this.addOnStageHero(null, list[1]);\n                (this.onStageHeros[list[2]] as Hero).level += 1;\n                this.addOnStageHero(this.onStageHeros[list[2]], list[2]);\n            }\n        }\n    }\n\n    handleCanvasMouseDown(e: React.MouseEvent<HTMLCanvasElement>) {\n        if (this.round === 'fighting') return;\n        this.isMouseDown = true;\n\n        let isFindOffStage = this.findHero(this.offStageHeros, e.clientX, e.clientY, 'off');\n        if (isFindOffStage) {\n            window.addEventListener('mousemove', this.handleMouseMove);\n            this.isRenderStrategy = true;\n            this.loopRender();\n            return;\n        }\n        let isFindOnStage = this.findHero(this.onStageHeros, e.clientX, e.clientY, 'on');\n        if (isFindOnStage) {\n            window.addEventListener('mousemove', this.handleMouseMove);\n            this.isRenderStrategy = true;\n            this.loopRender();\n            return;\n        }\n    }\n\n    handleTouchStart(e: React.TouchEvent<HTMLCanvasElement>) {\n        if (this.round === 'fighting') return;\n        e.stopPropagation();\n        e.preventDefault();\n        this.isMouseDown = true;\n\n        let isFindOffStage = this.findHero(this.offStageHeros, e.touches[0].clientX, e.touches[0].clientY, 'off');\n        if (isFindOffStage) {\n            window.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n            this.isRenderStrategy = true;\n            this.loopRender();\n            return;\n        }\n        let isFindOnStage = this.findHero(this.onStageHeros, e.touches[0].clientX, e.touches[0].clientY, 'on');\n        if (isFindOnStage) {\n            window.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n            this.isRenderStrategy = true;\n            this.loopRender();\n            return;\n        }\n    }\n\n    findHero(heros: (Hero|null)[], clientX: number, clientY: number, type: 'off'|'on'): boolean {\n        let heroIndex = heros.findIndex(hero => {\n            if (!hero) return false;\n\n            let isTrue = hero.isPointIn(clientX * this.sizeRate, clientY * this.sizeRate);\n            if (isTrue) {\n                let o = hero.point.toNumber();\n                this.mouseSelectItemOffset = [\n                    o[0] - clientX * this.sizeRate,\n                    o[1] - clientY * this.sizeRate\n                ];\n            }\n            return isTrue;\n        });\n\n        if (heroIndex !== -1) {\n            this.mouseSelectItem = heros[heroIndex];\n            this.mouseSelectItemType = type;\n            this.mouseSelectItemIndex = heroIndex as 0;\n            this.mouseSelectItemPosition = [clientX * this.sizeRate, clientY * this.sizeRate];\n            return true;\n        }\n        return false;\n    }\n\n    handleMouseUp(e: MouseEvent) {\n        window.removeEventListener('mousemove', this.handleMouseMove);\n        this.handleEventEnd(e.clientX, e.clientY);\n    }\n\n    handleTouchEnd(e: TouchEvent) {\n        window.removeEventListener('touchmove', this.handleTouchMove);\n        this.handleEventEnd(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n    }\n\n    handleEventEnd(clientX: number, clientY: number) {\n        let leftUp = [clientX * this.sizeRate + this.mouseSelectItemOffset[0], clientY * this.sizeRate + this.mouseSelectItemOffset[1]];\n        let rightDown = [leftUp[0] + 30, leftUp[1] + 30];\n\n        let pos = this.heroPosList.findIndex(pos => {\n            let p = pos.toNumber();\n\n            return leftUp[0] > p[0] - 18 && leftUp[1] > p[1] - 18\n                && rightDown[0] < p[0] + 48 && rightDown[1] < p[1] + 48;\n        });\n\n        if (pos !== -1 && this.mouseSelectItem) {\n            if (Math.floor(pos / 9) === 0) { // offStage\n                let targetI = pos % 9;\n                let temp = this.offStageHeros[targetI];\n                this.offStageHeros[targetI] = null;\n                if (this.mouseSelectItemType === 'on') {\n                    this.onStageHeros[this.mouseSelectItemIndex] = null;\n                } else {\n                    this.offStageHeros[this.mouseSelectItemIndex] = null;\n                }\n                this.addOffStageHero(this.mouseSelectItem, targetI as 0);\n                if (this.mouseSelectItemType === 'on') {\n                    this.addOnStageHero(temp, this.mouseSelectItemIndex);\n                } else {\n                    this.addOffStageHero(temp, this.mouseSelectItemIndex);\n                }\n            } else { // onStage\n                let targetI = pos % 9;\n                let temp = this.onStageHeros[targetI];\n                this.onStageHeros[targetI] = null;\n                if (this.mouseSelectItemType === 'on') {\n                    this.onStageHeros[this.mouseSelectItemIndex] = null;\n                } else {\n                    this.offStageHeros[this.mouseSelectItemIndex] = null;\n                }\n                this.addOnStageHero(this.mouseSelectItem, targetI as 0);\n                if (this.mouseSelectItemType === 'on') {\n                    this.addOnStageHero(temp, this.mouseSelectItemIndex);\n                } else {\n                    this.addOffStageHero(temp, this.mouseSelectItemIndex);\n                }\n            }\n        }\n\n        this.isMouseDown = false;\n        this.mouseSelectItem = null;\n        this.isRenderStrategy = false;\n    }\n\n    handleMouseMove(e: MouseEvent) {\n        this.handleMove(e.clientX, e.clientY);\n    }\n\n    handleTouchMove(e: TouchEvent) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.handleMove(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n    }\n\n    handleMove(clientX: number, clientY: number) {\n        this.mouseSelectItemPosition = [clientX * this.sizeRate, clientY * this.sizeRate];\n    }\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Game } from './core';\nimport s from './App.module.css';\n\nconst game = new Game();\n\ninterface hero {\n    type: 'grapeshot-hero' | 'lightning-hero' | 'sniper-hero' | 'boom-hero';\n    name: string;\n    price: number;\n}\n\nconst grapeshot: hero = {\n    type: 'grapeshot-hero',\n    name: '霰弹',\n    price: 220\n}\n\nconst lightning: hero = {\n    type: 'lightning-hero',\n    name: '闪电',\n    price: 200\n}\n\nconst sniper: hero = {\n    type: 'sniper-hero',\n    name: '狙击',\n    price: 150\n}\n\nconst boom: hero = {\n    type: 'boom-hero',\n    name: '爆破手',\n    price: 120\n}\n\nconst createProduct: (isFirst?: boolean) => hero = (isFirst) => {\n    let r = Math.random();\n\n    if (r < 0.25) {\n        return grapeshot;\n    } else if (r < 0.5) {\n        return lightning;\n    }  else if (r < 0.75) {\n        return boom;\n    } else {\n        return sniper;\n    }\n}\n\nconst createProductList: (isFirst?: boolean) => hero[] = (isFirst) => {\n    return [\n        createProduct(isFirst),\n        createProduct(isFirst),\n        createProduct(isFirst),\n        createProduct(isFirst),\n        createProduct(isFirst)\n    ];\n}\n\nconst App = () => {\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    const [end, setEnd] = useState(false);\n    const [isShopOpen, setIsShopOpen] = useState(false);\n    const [productList, setProductList] = useState<(hero | null)[]>(createProductList(true));\n    const [showShopError, setShowShopError] = useState(false);\n    const [round, setRound] = useState<'strategy' | 'fighting'>('strategy');\n\n    useEffect(() => {\n        if (!canvasRef.current) return;\n        canvasRef.current.width = game.width;\n        canvasRef.current.height = game.height;\n    }, [canvasRef]);\n\n    useEffect(() => {\n        game.setEnd = setEnd;\n    }, [end]);\n\n    useEffect(() => {\n        game.setRound = setRound;\n    }, [round]);\n\n    useEffect(() => {\n        game.canvas = canvasRef.current;\n        game.render();\n    }, [canvasRef]);\n\n    useEffect(() => {\n        const handler = game.handleMouseUp.bind(game);\n        const touchEndHandler = game.handleTouchEnd.bind(game);\n        window.addEventListener('mouseup', handler);\n        window.addEventListener('touchend', touchEndHandler)\n        return () => {\n            window.removeEventListener('mouseup', handler);\n            window.removeEventListener('touchend', touchEndHandler);\n        }\n    }, []);\n\n    function restart() {\n        game.restart();\n        setEnd(false);\n        setProductList(createProductList(true));\n        game.canvas = canvasRef.current;\n    }\n\n    return <>\n        <canvas ref={canvasRef} className={s.canvas}\n            onClick={() => {\n                setIsShopOpen(false);\n                setShowShopError(false);\n            }}\n            onTouchStart={game.handleTouchStart.bind(game)}\n            onMouseDown={game.handleCanvasMouseDown.bind(game)} />\n        <div className={s.info}>\n            <div>\n                <button className={s.shopBtn} onClick={() => {\n                    setIsShopOpen(!isShopOpen);\n                    setShowShopError(false);\n                }}>商店</button>\n                {isShopOpen && <div className={s.shopBox}>\n                    {round === 'strategy' && <div style={{\n                        color: 'red',\n                        fontSize: '46px',\n                        fontWeight: 300,\n                        textAlign: 'right',\n                        margin: '15px',\n                        marginBottom: '5px',\n                        position: 'absolute',\n                        right: '20px',\n                        bottom: '100%'\n                    }}>\n                        $:{game.$}\n                    </div>}\n                    <div style={{margin: '10px', marginBottom: '20px', display: 'flex', justifyContent: 'space-between'}}>\n                        <span style={{fontSize: '18px', color: 'gray'}}>童叟无欺，合理消费</span>\n                        <button onClick={() => {\n                            const isRefreshSuccess = game.refreshHeroList();\n                            if (isRefreshSuccess) {\n                                setProductList(createProductList());\n                            } else {\n                                setShowShopError(true);\n                            }\n                        }}>刷新商品<span style={{color: 'red'}}>$10</span></button>\n                    </div>\n                    <ul className={s.shopList}>\n                        {productList.map((p, i) => <li className={s.shopItem} key={i} onClick={() => {\n                            if (!p) return;\n                            let buySuccess = false;\n                            switch (p.type) {\n                                case 'grapeshot-hero':\n                                    buySuccess = game.buyHero('grapeshot');\n                                    break;\n                                case 'boom-hero':\n                                    buySuccess = game.buyHero('boom');\n                                    break;\n                                case 'sniper-hero':\n                                    buySuccess = game.buyHero('sniper');\n                                    break;\n                                case 'lightning-hero':\n                                default:\n                                    buySuccess = game.buyHero('lightning');\n                                    break;\n                            }\n                            if (!buySuccess) {\n                                setShowShopError(true);\n                                return;\n                            }\n                            // setIsShopOpen(false);\n                            let newProductList = [...productList];\n                            newProductList[i] = null;\n                            setProductList(newProductList);\n                            setShowShopError(false);\n                        }}>\n                            {p?.name}\n                            <div className={s.shopItemPrice}>\n                                {p && `$${p.price}`}\n                            </div>\n                        </li>)}\n                    </ul>\n                    {showShopError && <div className={s.shopError}>\n                        钱不够！！！！！！\n                    </div>}\n                </div>}\n            </div>\n            <div className={[s.gameEndBox, end ? s.end : ''].join(' ')}>\n                {game.result === 'win' ? '恭喜🎉' : 'game over'}\n                <button onClick={restart} className={s.restartBtn}>restart</button>\n            </div>\n            <div>\n                {round === 'strategy' && <button className={s.startFighting} onClick={() => {\n                    game.startFighting();\n                    setIsShopOpen(false);\n                }}>开始阻击</button>}\n            </div>\n            <div>\n                {round === 'strategy' && <div className={s.tips}>\n                    <div>1. 在商店购买武器</div>\n                    <div>2. 将武器拖拽到上排战斗区</div>\n                    <div>3. 点击开始阻击</div>\n                </div>}\n            </div>\n        </div>\n        <a className={s.newLink} href=\"/d-game-2\">新版本地址（开发中）</a>\n    </>\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport VConsole from 'vconsole';\n\n// const vConsole = new VConsole({ maxLogNumber: 50 });\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"App_canvas__1KgDx\",\"info\":\"App_info__3tKmE\",\"gameEndBox\":\"App_gameEndBox__e2Cnq\",\"end\":\"App_end__3t3U7\",\"restartBtn\":\"App_restartBtn__2M1an\",\"shopBtn\":\"App_shopBtn__1GjVz\",\"shopBox\":\"App_shopBox__ApMbX\",\"shopList\":\"App_shopList__2OMys\",\"shopItem\":\"App_shopItem__2UEyj\",\"shopItemPrice\":\"App_shopItemPrice__19Ocx\",\"shopError\":\"App_shopError__12I5k\",\"startFighting\":\"App_startFighting__ner9a\",\"tips\":\"App_tips__3qUER\",\"newLink\":\"App_newLink__3UDXM\"};"],"sourceRoot":""}